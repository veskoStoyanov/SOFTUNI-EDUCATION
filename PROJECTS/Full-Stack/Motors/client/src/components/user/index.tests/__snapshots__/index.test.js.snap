// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`redux should render corecttly! Login should work properly! 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Connect(Login) />
</ContextProvider>
`;

exports[`redux should render corecttly! Logout should work properly! 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Connect(Logout) />
</ContextProvider>
`;

exports[`redux should render corecttly! Register should work properly! 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Connect(Component) />
</ContextProvider>
`;

exports[`redux should render corecttly! checks for html changes in LoginForm 1`] = `
<Fragment>
  <h1>
    Login
  </h1>
  <div
    className="form"
  >
    <form>
      <label
        htmlFor="username"
      >
        Username:
      </label>
      <input
        id="username"
        name="username"
        type="text"
      />
      <br />
      <label
        htmlFor="password"
      >
        Password:
      </label>
      <input
        id="password"
        name="password"
        type="password"
      />
      <br />
      <input
        type="submit"
        value="Login"
      />
    </form>
  </div>
</Fragment>
`;

exports[`redux should render corecttly! checks for html changes in RegisterForm 1`] = `
<div>
  <h1>
    Register
  </h1>
  <div
    className="form"
  >
    <form>
      <label
        htmlFor="name"
      >
        Username:
      </label>
      <input
        name="username"
        type="text"
      />
      <br />
      <label
        htmlFor="name"
      >
        Password:
      </label>
      <input
        name="password"
        type="password"
      />
      <br />
      <label
        htmlFor="name"
      >
        Repeat-Password:
      </label>
      <input
        name="repeatPass"
        type="password"
      />
      <br />
      <label
        htmlFor="name"
      >
        Image URL
      </label>
      <input
        name="image"
        type="text"
      />
      <br />
      <input
        type="submit"
        value="Register"
      />
    </form>
  </div>
</div>
`;
