// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`redux should render corecttly! Catalog should work properly! 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Connect(Component) />
</ContextProvider>
`;

exports[`redux should render corecttly! Search should work properly! 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Connect(Search) />
</ContextProvider>
`;

exports[`redux should render corecttly! checks for html changes in Motor 1`] = `
<Link
  to="/details/undefined"
>
  <div
    className="card mb-4"
  >
    <img
      alt="Carimage cap"
      className="card-img-top"
      width="400"
    />
    <div
      className="card-body"
    >
      <h4
        className="card-title"
      >
        <strong />
      </h4>
      <p
        className="card-text"
      >
        <strong>
           Лв
        </strong>
      </p>
      <span>
        <img
          alt="likePage"
          className="min"
          src="like.png"
        />
      </span>
      <span />
    </div>
  </div>
</Link>
`;

exports[`redux should render corecttly! checks for html changes in SortBtn 1`] = `
<Dropdown
  navbar={false}
>
  <DropdownToggle
    id="dropdown-basic"
    variant="success"
  />
  <DropdownMenu
    alignRight={false}
    flip={true}
  >
    <DropdownItem
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "SafeAnchor",
          "render": [Function],
        }
      }
      disabled={false}
      href="#Price-highest"
    >
      Price-highest
    </DropdownItem>
    <DropdownItem
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "SafeAnchor",
          "render": [Function],
        }
      }
      disabled={false}
      href="#Price-lowest"
    >
      Price-lowest
    </DropdownItem>
    <DropdownItem
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "SafeAnchor",
          "render": [Function],
        }
      }
      disabled={false}
      href="#Most-likes"
    >
      Most-likes
    </DropdownItem>
    <DropdownItem
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "SafeAnchor",
          "render": [Function],
        }
      }
      disabled={false}
      href="#Alphabetical"
    >
      Alphabetical
    </DropdownItem>
  </DropdownMenu>
</Dropdown>
`;
